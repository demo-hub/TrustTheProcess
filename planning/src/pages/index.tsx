import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";

type TechnologyCardProps = {
  name: string;
  description: string;
  documentation: string;
  unavailable?: boolean;
};

const Home: NextPage = () => {
  const hello = trpc.useQuery(["example.hello", { text: "from tRPC" }]);

  return (
    <>
      <Head>
        <title>Trust the process</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex flex-col items-center justify-center min-h-screen p-4">
        <h1 className="text-5xl md:text-[5rem] leading-normal font-extrabold text-gray-700">
          Pick your <span className="text-purple-300">Poison</span>
        </h1>
        <div className="grid gap-3 pt-3 mt-3 text-center md:grid-cols-2">
          <TechnologyCard
            name="Planning Poker"
            description="Number-coded playing cards are used to estimate an item"
            documentation="https://www.atlassian.com/blog/platform/a-brief-overview-of-planning-poker"
          />
          <TechnologyCard
            name="Bucket System"
            description="User stories (items) are placed within buckets (columns)"
            documentation="https://www.techagilist.com/agile/scrum/bucket-system-agile-estimation-method/"
            unavailable
          />
          <TechnologyCard
            name="Three-Point Method"
            description="User stories (items) are estimated using a three-point method"
            documentation="https://tailwindcss.com/"
            unavailable
          />
        </div>
        <div className="pt-6 text-2xl text-blue-500 flex justify-center items-center w-full">
          {hello.data ? <p>{hello.data.greeting}</p> : <p>Loading..</p>}
        </div>
      </main>
    </>
  );
};

const TechnologyCard = ({
  name,
  description,
  documentation,
  unavailable = false,
}: TechnologyCardProps) => {
  return (
    <>
      <section
        className={`flex flex-col justify-center p-6 duration-500 border-2 border-gray-500 rounded ${
          !unavailable
            ? "cursor-pointer shadow-xl motion-safe:hover:scale-105"
            : "bg-purple-100"
        }`}
      >
        <h2 className="text-lg text-gray-700">{name}</h2>
        <p className="text-sm text-gray-600">{description}</p>
        <a
          className="mt-3 text-sm underline text-violet-500 decoration-dotted underline-offset-2"
          href={documentation}
          target="_blank"
          rel="noreferrer"
        >
          Documentation
        </a>
      </section>
    </>
  );
};

export default Home;
